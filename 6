#include <stdio.h>
#include <string.h>

int main() {
    int n, i, j, k;
    char expr[20][50];       // store full expressions
    char rhs[20][50];        // store RHS only
    char optimized[20][50];  // store optimized code

    printf("Enter number of expressions: ");
    scanf("%d", &n);

    printf("Enter the expressions:\n");
    for (i = 0; i < n; i++) {
        scanf("%s", expr[i]);

        // extract RHS (part after '=')
        char *equalPos = strchr(expr[i], '=');
        if (equalPos != NULL) {
            strcpy(rhs[i], equalPos + 1);
        } else {
            strcpy(rhs[i], expr[i]); // if no '=', take whole expr
        }
    }

    k = 0;
    for (i = 0; i < n; i++) {
        int isDuplicate = 0;
        for (j = 0; j < i; j++) {
            if (strcmp(rhs[i], rhs[j]) == 0) {
                isDuplicate = 1;
                break;
            }
        }
        if (!isDuplicate) {
            strcpy(optimized[k], expr[i]);
            k++;
        }
    }

    printf("\nOptimized Code (after eliminating common subexpressions):\n");
    for (i = 0; i < k; i++) {
        printf("%s\n", optimized[i]);
    }

    return 0;
}
